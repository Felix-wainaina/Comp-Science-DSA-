/* 
It is better to have a comment here mentioning the question (problem you are solb=ving and explaining your solution
*/
#include <bits/stdc++.h>
using namespace std;

/* 
Did you test this code with an example?
I think the solution does not achieve the task

Duplicates do not onluy occur in consecutive elements. 
Element at postion 5 could heve it's duplicate at position 10000000.
*/

// Function to remove duplicate elements This function
int removeDuplicates(int nums[], int n)
{
	if (n == 0 || n == 1)  // This is very good 
		return n; 

	int temp[n];

	int j = 0;

	// If current element is not equal to next element
	// then store that current element
	for (int i = 0; i < n - 1; i++)
		if (nums[i] != nums[i + 1])
			temp[j++] = nums[i];

	// Store the last element as whether it is unique or
	// repeated, it hasn't stored previously
	temp[j++] = nums[n - 1];

	for (int i = 0; i < j; i++)
		nums[i] = temp[i];

	return j;
}

